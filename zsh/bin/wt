#!/usr/bin/env bash

function get_bare_worktree_path {
  git worktree list | grep "(bare)" | awk '{ print $1 }'
}

function wt {
  case "$1" in
    list)
      git worktree list
      ;;
    add)
      shift
      cd -- "$(get_bare_worktree_path)"  || return 1
      git worktree add "$@"
      cd "$1" || return 1
      echo "Fetching canges"
      git fetch --all || return 1
      # echo "Merging with master"
      # git merge origin/master || return 1
      echo "Merging with develop"
      git merge origin/develop || return 1
      ;;
    remove)
      shift
      if [[ "$1" == "--all" ]]; then
        cd -- "$(get_bare_worktree_path)"  || return 1
        for dir in $(git worktree list | grep -vE "(bare)|master|develop" | awk '{ print $1 }'); do
           git worktree remove "$dir"
        done
      elif [[ "$1" == "" ]]; then
        local dir
        dir=$(git worktree list | grep -v "(bare)" | fzf --tmux | awk '{ print $1 }')
        if [ -n "$dir" ]; then
          if [ "$(pwd)" = "$dir" ]; then
            cd -- "$(get_bare_worktree_path)" || return 1
          fi
          echo "Removing worktree: $dir"
          git worktree remove "$dir"
        fi
      else
        echo "Usage: wt {list|add|remove|remove --all}"
      fi
      ;;
    "")
      local dir
      dir=$(git worktree list | fzf --tmux | awk '{ print $1 }')
      if [ -n "$dir" ]; then
        echo "Changing current worktree: $dir"
        cd "$dir" || return 1
      fi
      ;;
    *)
      echo "Usage: wt {list|add|remove|remove --all}"
      return 1
      ;;
  esac
}

